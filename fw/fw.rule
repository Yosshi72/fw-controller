flush ruleset

table inet filter {
    chain INPUT {
        type filter hook input priority 0; policy drop;

        # pass from LOCAL_INBOUND_ALLOWED_NETWORK
        ip saddr 203.178.128.0/17 accept; # WIDE-v4
        # ip6 saddr 2001:200::/32 accept; # WIDE-v6
        ip6 saddr 2001:db8:10:10::/64 accept;
		ip6 saddr 2001:db8:10:20::/64 accept;
		ip6 saddr 2001:db8:10:30::/64 accept;
		

        # pass icmp but rate limit
        ip6 nexthdr icmpv6 limit rate 10/second accept;
        ip protocol icmp  limit rate 10/second accept;

        # pass established
        ct state established,related accept;
    }

    chain FORWARD {
        type filter hook forward priority 0; policy accept;
        oifname downlink jump ZONE_TRUST;
		oifname test1 jump ZONE_TRUST;
		oifname test2 jump ZONE_TRUST;
		
        # oifname {TRUST_IF_NAME} jump ZONE_TRUST;
        oifname vsix-bb jump ZONE_UNTRUST;
    }

    chain ZONE_TRUST {
        ##### trust zone #####

        # allow trust zone to trust
        # iifname "{TRUST_IF_NAME}" return;
        iifname downlink return;
		iifname test1 return;
		iifname test2 return;
		

        # jump untrust to trust chain
        iifname "vsix-bb" jump PAIR_untrust_to_trust;

    }

    chain ZONE_UNTRUST {
        ##### untrust zone #####

        # allow untrust zone to untrust
        iifname "vsix-bb" return;

        # jump untrust to trust chain
        # iifname "{TRUST_IF_NAME}" jump PAIR_trust_to_untrust;
        iifname downlink jump PAIR_trust_to_untrust;
		iifname test1 jump PAIR_trust_to_untrust;
		iifname test2 jump PAIR_trust_to_untrust;
		

    }

    chain PAIR_untrust_to_trust {
        # pass icmp
        ip6 nexthdr icmpv6 return
        ip protocol icmp return

        # established
        ct state established,related return;

        # default drop
        drop;
    }

    chain PAIR_trust_to_untrust {
        return;
    }

}